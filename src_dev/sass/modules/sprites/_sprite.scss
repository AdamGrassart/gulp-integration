  /*
  SCSS variables are information about icon's compiled state, stored under its original file name
  
  .icon-home {
    width: $icon-home-width;
  }
  
  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path;
  
  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites;
  */

    $apple-ex-name: 'apple_ex';
    $apple-ex-x: 0px;
    $apple-ex-y: 0px;
    $apple-ex-offset-x: 0px;
    $apple-ex-offset-y: 0px;
    $apple-ex-width: 305px;
    $apple-ex-height: 314px;
    $apple-ex-total-width: 610px;
    $apple-ex-total-height: 314px;
    $apple-ex-image: '../../../../sprite.png';
    $apple-ex: (0px, 0px, 0px, 0px, 305px, 314px, 610px, 314px, '../../../../sprite.png', 'apple_ex', );
    $apple-ex1-name: 'apple_ex1';
    $apple-ex1-x: 305px;
    $apple-ex1-y: 0px;
    $apple-ex1-offset-x: -305px;
    $apple-ex1-offset-y: 0px;
    $apple-ex1-width: 305px;
    $apple-ex1-height: 314px;
    $apple-ex1-total-width: 610px;
    $apple-ex1-total-height: 314px;
    $apple-ex1-image: '../../../../sprite.png';
    $apple-ex1: (305px, 0px, -305px, 0px, 305px, 314px, 610px, 314px, '../../../../sprite.png', 'apple_ex1', );

  $spritesheet-width: 610px;
  $spritesheet-height: 314px;
  $spritesheet-image: '../../../../sprite.png';
  $spritesheet-sprites: ($apple-ex, $apple-ex1, );
  $spritesheet: (610px, 314px, '../../../../sprite.png', $spritesheet-sprites, );

    /*
    The provided mixins are intended to be used with the array-like variables
    
    .icon-home {
      @include sprite-width($icon-home);
    }
    
    .icon-email {
      @include sprite($icon-email);
    }
    */

    @mixin sprite-width($sprite) {
      width: nth($sprite, 5);
    }
    
    @mixin sprite-height($sprite) {
      height: nth($sprite, 6);
    }
    
    @mixin sprite-position($sprite) {
      $sprite-offset-x: nth($sprite, 3);
      $sprite-offset-y: nth($sprite, 4);
      background-position: $sprite-offset-x  $sprite-offset-y;
    }
    
    @mixin sprite-image($sprite) {
      $sprite-image: nth($sprite, 9);
      background-image: url(#{$sprite-image});
    }
    
    @mixin sprite($sprite) {
      @include sprite-image($sprite);
      @include sprite-position($sprite);
      @include sprite-width($sprite);
      @include sprite-height($sprite);
    }

  /*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SCSS
  
  @include sprites($spritesheet-sprites);
  */

    @mixin sprites($sprites) {
      @each $sprite in $sprites {
        $sprite-name: nth($sprite, 10);
        .#{$sprite-name} {
          @include sprite($sprite);
        }
      }
    }
